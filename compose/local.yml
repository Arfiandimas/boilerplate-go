version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:5.4.0
    hostname: broker
    container_name: broker
    depends_on:
    - zookeeper
    ports:
    - "29092:29092"
    - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ADVERTISED: 0.0.0.0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  redis:
    image: redis:4
    container_name: redis
    hostname: redis
    ports:
      - 6479:6379
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
    networks:
      - code-network

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: {{PROJECT_NAME}}
      MYSQL_USER: {{PROJECT_NAME}}
      MYSQL_PASSWORD: {{PROJECT_NAME}}
      MYSQL_DATABASE: {{PROJECT_NAME}}
    ports:
        - 3306:3306
    volumes:
      - ./mydb:/var/lib/mysql
      - ./:/db
    networks:
      - code-network
  

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./mydb:/data/db
    ports:
      - "27017:27017"

  # elastic:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.2
  #    container_name: elastic
  #    restart: always
  #    hostname: elastic
  #    environment:
  #      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #      - "discovery.type=single-node"
  #    ports:
  #      - 9300:9200
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #    networks:
  #      - code-network
  #    volumes:
  #      - elastic:/usr/share/elasticsearch/data
  #    depends_on:
  #      - mariadb

  # kibana:
  #    image: docker.elastic.co/kibana/kibana:6.6.2
  #    container_name: kibana
  #    hostname: kibana
  #    restart: always
  #    environment:
  #      ELASTICSEARCH_HOSTS: http://elastic:9200
  #      ELASTICSEARCH_URL: http://elastic:9200
  #      SERVER_NAME: kibana.local
  #    depends_on:
  #      - mariadb
  #      - elastic
  #    networks:
  #      - code-network
  #    ports:
  #      - 5601:5601
# volumes:
#   elastic:
#     driver: local
networks:
  code-network:
    driver: bridge